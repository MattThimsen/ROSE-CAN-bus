ARM GAS  /tmp/ccXK3Ktf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f4xx_hal_msp.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_MspInit,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_MspInit
  23              		.thumb
  24              		.thumb_func
  26              	HAL_MspInit:
  27              	.LFB123:
  28              		.file 1 "Src/stm32f4xx_hal_msp.c"
   1:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_hal_msp.c **** /**
   3:Src/stm32f4xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32f4xx_hal_msp.c ****   * File Name          : stm32f4xx_hal_msp.c
   5:Src/stm32f4xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   6:Src/stm32f4xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32f4xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32f4xx_hal_msp.c ****   ** This notice applies to any and all portions of this file
   9:Src/stm32f4xx_hal_msp.c ****   * that are not between comment pairs USER CODE BEGIN and
  10:Src/stm32f4xx_hal_msp.c ****   * USER CODE END. Other portions of this file, whether 
  11:Src/stm32f4xx_hal_msp.c ****   * inserted by the user or by software development tools
  12:Src/stm32f4xx_hal_msp.c ****   * are owned by their respective copyright owners.
  13:Src/stm32f4xx_hal_msp.c ****   *
  14:Src/stm32f4xx_hal_msp.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
  15:Src/stm32f4xx_hal_msp.c ****   *
  16:Src/stm32f4xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without modification,
  17:Src/stm32f4xx_hal_msp.c ****   * are permitted provided that the following conditions are met:
  18:Src/stm32f4xx_hal_msp.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  19:Src/stm32f4xx_hal_msp.c ****   *      this list of conditions and the following disclaimer.
  20:Src/stm32f4xx_hal_msp.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/stm32f4xx_hal_msp.c ****   *      this list of conditions and the following disclaimer in the documentation
  22:Src/stm32f4xx_hal_msp.c ****   *      and/or other materials provided with the distribution.
  23:Src/stm32f4xx_hal_msp.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  24:Src/stm32f4xx_hal_msp.c ****   *      may be used to endorse or promote products derived from this software
  25:Src/stm32f4xx_hal_msp.c ****   *      without specific prior written permission.
  26:Src/stm32f4xx_hal_msp.c ****   *
  27:Src/stm32f4xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  28:Src/stm32f4xx_hal_msp.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  29:Src/stm32f4xx_hal_msp.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  30:Src/stm32f4xx_hal_msp.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /tmp/ccXK3Ktf.s 			page 2


  31:Src/stm32f4xx_hal_msp.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  32:Src/stm32f4xx_hal_msp.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  33:Src/stm32f4xx_hal_msp.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  34:Src/stm32f4xx_hal_msp.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  35:Src/stm32f4xx_hal_msp.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:Src/stm32f4xx_hal_msp.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:Src/stm32f4xx_hal_msp.c ****   *
  38:Src/stm32f4xx_hal_msp.c ****   ******************************************************************************
  39:Src/stm32f4xx_hal_msp.c ****   */
  40:Src/stm32f4xx_hal_msp.c **** /* USER CODE END Header */
  41:Src/stm32f4xx_hal_msp.c **** 
  42:Src/stm32f4xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  43:Src/stm32f4xx_hal_msp.c **** #include "main.h"
  44:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  45:Src/stm32f4xx_hal_msp.c **** 
  46:Src/stm32f4xx_hal_msp.c **** /* USER CODE END Includes */
  47:Src/stm32f4xx_hal_msp.c **** 
  48:Src/stm32f4xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  49:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN TD */
  50:Src/stm32f4xx_hal_msp.c **** 
  51:Src/stm32f4xx_hal_msp.c **** /* USER CODE END TD */
  52:Src/stm32f4xx_hal_msp.c **** 
  53:Src/stm32f4xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  54:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN Define */
  55:Src/stm32f4xx_hal_msp.c ****  
  56:Src/stm32f4xx_hal_msp.c **** /* USER CODE END Define */
  57:Src/stm32f4xx_hal_msp.c **** 
  58:Src/stm32f4xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  59:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  60:Src/stm32f4xx_hal_msp.c **** 
  61:Src/stm32f4xx_hal_msp.c **** /* USER CODE END Macro */
  62:Src/stm32f4xx_hal_msp.c **** 
  63:Src/stm32f4xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  64:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN PV */
  65:Src/stm32f4xx_hal_msp.c **** 
  66:Src/stm32f4xx_hal_msp.c **** /* USER CODE END PV */
  67:Src/stm32f4xx_hal_msp.c **** 
  68:Src/stm32f4xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  69:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  70:Src/stm32f4xx_hal_msp.c **** 
  71:Src/stm32f4xx_hal_msp.c **** /* USER CODE END PFP */
  72:Src/stm32f4xx_hal_msp.c **** 
  73:Src/stm32f4xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  74:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  75:Src/stm32f4xx_hal_msp.c **** 
  76:Src/stm32f4xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  77:Src/stm32f4xx_hal_msp.c **** 
  78:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  79:Src/stm32f4xx_hal_msp.c **** 
  80:Src/stm32f4xx_hal_msp.c **** /* USER CODE END 0 */
  81:Src/stm32f4xx_hal_msp.c **** /**
  82:Src/stm32f4xx_hal_msp.c ****   * Initializes the Global MSP.
  83:Src/stm32f4xx_hal_msp.c ****   */
  84:Src/stm32f4xx_hal_msp.c **** void HAL_MspInit(void)
  85:Src/stm32f4xx_hal_msp.c **** {
  29              		.loc 1 85 0
  30              		.cfi_startproc
ARM GAS  /tmp/ccXK3Ktf.s 			page 3


  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 82B0     		sub	sp, sp, #8
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              	.LBB2:
  86:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  87:Src/stm32f4xx_hal_msp.c **** 
  88:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  89:Src/stm32f4xx_hal_msp.c **** 
  90:Src/stm32f4xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  38              		.loc 1 90 0
  39 0002 0021     		movs	r1, #0
  40 0004 0091     		str	r1, [sp]
  41 0006 0B4B     		ldr	r3, .L3
  42 0008 5A6C     		ldr	r2, [r3, #68]
  43 000a 42F48042 		orr	r2, r2, #16384
  44 000e 5A64     		str	r2, [r3, #68]
  45 0010 5A6C     		ldr	r2, [r3, #68]
  46 0012 02F48042 		and	r2, r2, #16384
  47 0016 0092     		str	r2, [sp]
  48 0018 009A     		ldr	r2, [sp]
  49              	.LBE2:
  50              	.LBB3:
  91:Src/stm32f4xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  51              		.loc 1 91 0
  52 001a 0191     		str	r1, [sp, #4]
  53 001c 1A6C     		ldr	r2, [r3, #64]
  54 001e 42F08052 		orr	r2, r2, #268435456
  55 0022 1A64     		str	r2, [r3, #64]
  56 0024 1B6C     		ldr	r3, [r3, #64]
  57 0026 03F08053 		and	r3, r3, #268435456
  58 002a 0193     		str	r3, [sp, #4]
  59 002c 019B     		ldr	r3, [sp, #4]
  60              	.LBE3:
  92:Src/stm32f4xx_hal_msp.c **** 
  93:Src/stm32f4xx_hal_msp.c ****   /* System interrupt init*/
  94:Src/stm32f4xx_hal_msp.c **** 
  95:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
  96:Src/stm32f4xx_hal_msp.c **** 
  97:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
  98:Src/stm32f4xx_hal_msp.c **** }
  61              		.loc 1 98 0
  62 002e 02B0     		add	sp, sp, #8
  63              	.LCFI1:
  64              		.cfi_def_cfa_offset 0
  65              		@ sp needed
  66 0030 7047     		bx	lr
  67              	.L4:
  68 0032 00BF     		.align	2
  69              	.L3:
  70 0034 00380240 		.word	1073887232
  71              		.cfi_endproc
  72              	.LFE123:
  74              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  75              		.align	2
ARM GAS  /tmp/ccXK3Ktf.s 			page 4


  76              		.global	HAL_CAN_MspInit
  77              		.thumb
  78              		.thumb_func
  80              	HAL_CAN_MspInit:
  81              	.LFB124:
  99:Src/stm32f4xx_hal_msp.c **** 
 100:Src/stm32f4xx_hal_msp.c **** /**
 101:Src/stm32f4xx_hal_msp.c **** * @brief CAN MSP Initialization
 102:Src/stm32f4xx_hal_msp.c **** * This function configures the hardware resources used in this example
 103:Src/stm32f4xx_hal_msp.c **** * @param hcan: CAN handle pointer
 104:Src/stm32f4xx_hal_msp.c **** * @retval None
 105:Src/stm32f4xx_hal_msp.c **** */
 106:Src/stm32f4xx_hal_msp.c **** void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
 107:Src/stm32f4xx_hal_msp.c **** {
  82              		.loc 1 107 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 32
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              	.LVL0:
  87 0000 10B5     		push	{r4, lr}
  88              	.LCFI2:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 4, -8
  91              		.cfi_offset 14, -4
  92 0002 88B0     		sub	sp, sp, #32
  93              	.LCFI3:
  94              		.cfi_def_cfa_offset 40
 108:Src/stm32f4xx_hal_msp.c **** 
 109:Src/stm32f4xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  95              		.loc 1 109 0
  96 0004 0023     		movs	r3, #0
  97 0006 0393     		str	r3, [sp, #12]
  98 0008 0493     		str	r3, [sp, #16]
  99 000a 0593     		str	r3, [sp, #20]
 100 000c 0693     		str	r3, [sp, #24]
 101 000e 0793     		str	r3, [sp, #28]
 110:Src/stm32f4xx_hal_msp.c ****   if(hcan->Instance==CAN1)
 102              		.loc 1 110 0
 103 0010 0268     		ldr	r2, [r0]
 104 0012 184B     		ldr	r3, .L8
 105 0014 9A42     		cmp	r2, r3
 106 0016 2BD1     		bne	.L5
 107              	.LBB4:
 111:Src/stm32f4xx_hal_msp.c ****   {
 112:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 0 */
 113:Src/stm32f4xx_hal_msp.c **** 
 114:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END CAN1_MspInit 0 */
 115:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock enable */
 116:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_CAN1_CLK_ENABLE();
 108              		.loc 1 116 0
 109 0018 0024     		movs	r4, #0
 110 001a 0194     		str	r4, [sp, #4]
 111 001c 03F5EA33 		add	r3, r3, #119808
 112 0020 1A6C     		ldr	r2, [r3, #64]
 113 0022 42F00072 		orr	r2, r2, #33554432
 114 0026 1A64     		str	r2, [r3, #64]
 115 0028 1A6C     		ldr	r2, [r3, #64]
ARM GAS  /tmp/ccXK3Ktf.s 			page 5


 116 002a 02F00072 		and	r2, r2, #33554432
 117 002e 0192     		str	r2, [sp, #4]
 118 0030 019A     		ldr	r2, [sp, #4]
 119              	.LBE4:
 120              	.LBB5:
 117:Src/stm32f4xx_hal_msp.c ****   
 118:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 121              		.loc 1 118 0
 122 0032 0294     		str	r4, [sp, #8]
 123 0034 1A6B     		ldr	r2, [r3, #48]
 124 0036 42F00202 		orr	r2, r2, #2
 125 003a 1A63     		str	r2, [r3, #48]
 126 003c 1B6B     		ldr	r3, [r3, #48]
 127 003e 03F00203 		and	r3, r3, #2
 128 0042 0293     		str	r3, [sp, #8]
 129 0044 029B     		ldr	r3, [sp, #8]
 130              	.LBE5:
 119:Src/stm32f4xx_hal_msp.c ****     /**CAN1 GPIO Configuration    
 120:Src/stm32f4xx_hal_msp.c ****     PB8     ------> CAN1_RX
 121:Src/stm32f4xx_hal_msp.c ****     PB9     ------> CAN1_TX 
 122:Src/stm32f4xx_hal_msp.c ****     */
 123:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 131              		.loc 1 123 0
 132 0046 4FF44073 		mov	r3, #768
 133 004a 0393     		str	r3, [sp, #12]
 124:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 134              		.loc 1 124 0
 135 004c 0223     		movs	r3, #2
 136 004e 0493     		str	r3, [sp, #16]
 125:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 126:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 137              		.loc 1 126 0
 138 0050 0323     		movs	r3, #3
 139 0052 0693     		str	r3, [sp, #24]
 127:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 140              		.loc 1 127 0
 141 0054 0923     		movs	r3, #9
 142 0056 0793     		str	r3, [sp, #28]
 128:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 143              		.loc 1 128 0
 144 0058 0748     		ldr	r0, .L8+4
 145              	.LVL1:
 146 005a 03A9     		add	r1, sp, #12
 147 005c FFF7FEFF 		bl	HAL_GPIO_Init
 148              	.LVL2:
 129:Src/stm32f4xx_hal_msp.c **** 
 130:Src/stm32f4xx_hal_msp.c ****     /* CAN1 interrupt Init */
 131:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 149              		.loc 1 131 0
 150 0060 1420     		movs	r0, #20
 151 0062 2146     		mov	r1, r4
 152 0064 2246     		mov	r2, r4
 153 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 154              	.LVL3:
 132:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 155              		.loc 1 132 0
 156 006a 1420     		movs	r0, #20
ARM GAS  /tmp/ccXK3Ktf.s 			page 6


 157 006c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 158              	.LVL4:
 159              	.L5:
 133:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
 134:Src/stm32f4xx_hal_msp.c **** 
 135:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END CAN1_MspInit 1 */
 136:Src/stm32f4xx_hal_msp.c ****   }
 137:Src/stm32f4xx_hal_msp.c **** 
 138:Src/stm32f4xx_hal_msp.c **** }
 160              		.loc 1 138 0
 161 0070 08B0     		add	sp, sp, #32
 162              	.LCFI4:
 163              		.cfi_def_cfa_offset 8
 164              		@ sp needed
 165 0072 10BD     		pop	{r4, pc}
 166              	.L9:
 167              		.align	2
 168              	.L8:
 169 0074 00640040 		.word	1073767424
 170 0078 00040240 		.word	1073873920
 171              		.cfi_endproc
 172              	.LFE124:
 174              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 175              		.align	2
 176              		.global	HAL_CAN_MspDeInit
 177              		.thumb
 178              		.thumb_func
 180              	HAL_CAN_MspDeInit:
 181              	.LFB125:
 139:Src/stm32f4xx_hal_msp.c **** 
 140:Src/stm32f4xx_hal_msp.c **** /**
 141:Src/stm32f4xx_hal_msp.c **** * @brief CAN MSP De-Initialization
 142:Src/stm32f4xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 143:Src/stm32f4xx_hal_msp.c **** * @param hcan: CAN handle pointer
 144:Src/stm32f4xx_hal_msp.c **** * @retval None
 145:Src/stm32f4xx_hal_msp.c **** */
 146:Src/stm32f4xx_hal_msp.c **** 
 147:Src/stm32f4xx_hal_msp.c **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
 148:Src/stm32f4xx_hal_msp.c **** {
 182              		.loc 1 148 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              	.LVL5:
 187 0000 08B5     		push	{r3, lr}
 188              	.LCFI5:
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 3, -8
 191              		.cfi_offset 14, -4
 149:Src/stm32f4xx_hal_msp.c **** 
 150:Src/stm32f4xx_hal_msp.c ****   if(hcan->Instance==CAN1)
 192              		.loc 1 150 0
 193 0002 0268     		ldr	r2, [r0]
 194 0004 084B     		ldr	r3, .L13
 195 0006 9A42     		cmp	r2, r3
 196 0008 0CD1     		bne	.L10
 151:Src/stm32f4xx_hal_msp.c ****   {
ARM GAS  /tmp/ccXK3Ktf.s 			page 7


 152:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspDeInit 0 */
 153:Src/stm32f4xx_hal_msp.c **** 
 154:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END CAN1_MspDeInit 0 */
 155:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock disable */
 156:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_CAN1_CLK_DISABLE();
 197              		.loc 1 156 0
 198 000a 084A     		ldr	r2, .L13+4
 199 000c 136C     		ldr	r3, [r2, #64]
 200 000e 23F00073 		bic	r3, r3, #33554432
 201 0012 1364     		str	r3, [r2, #64]
 157:Src/stm32f4xx_hal_msp.c ****   
 158:Src/stm32f4xx_hal_msp.c ****     /**CAN1 GPIO Configuration    
 159:Src/stm32f4xx_hal_msp.c ****     PB8     ------> CAN1_RX
 160:Src/stm32f4xx_hal_msp.c ****     PB9     ------> CAN1_TX 
 161:Src/stm32f4xx_hal_msp.c ****     */
 162:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8|GPIO_PIN_9);
 202              		.loc 1 162 0
 203 0014 0648     		ldr	r0, .L13+8
 204              	.LVL6:
 205 0016 4FF44071 		mov	r1, #768
 206 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 207              	.LVL7:
 163:Src/stm32f4xx_hal_msp.c **** 
 164:Src/stm32f4xx_hal_msp.c ****     /* CAN1 interrupt DeInit */
 165:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
 208              		.loc 1 165 0
 209 001e 1420     		movs	r0, #20
 210 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 211              	.LVL8:
 212              	.L10:
 213 0024 08BD     		pop	{r3, pc}
 214              	.L14:
 215 0026 00BF     		.align	2
 216              	.L13:
 217 0028 00640040 		.word	1073767424
 218 002c 00380240 		.word	1073887232
 219 0030 00040240 		.word	1073873920
 220              		.cfi_endproc
 221              	.LFE125:
 223              		.text
 224              	.Letext0:
 225              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 226              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 227              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 228              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 229              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 230              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 231              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 232              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccXK3Ktf.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_msp.c
     /tmp/ccXK3Ktf.s:21     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccXK3Ktf.s:26     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccXK3Ktf.s:70     .text.HAL_MspInit:0000000000000034 $d
     /tmp/ccXK3Ktf.s:75     .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccXK3Ktf.s:80     .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccXK3Ktf.s:169    .text.HAL_CAN_MspInit:0000000000000074 $d
     /tmp/ccXK3Ktf.s:175    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccXK3Ktf.s:180    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccXK3Ktf.s:217    .text.HAL_CAN_MspDeInit:0000000000000028 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
