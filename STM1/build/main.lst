ARM GAS  /tmp/ccPijiT8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB126:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccPijiT8.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  50:Src/main.c    **** /* USER CODE BEGIN PTD */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PTD */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  55:Src/main.c    **** /* USER CODE BEGIN PD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN PM */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PM */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  65:Src/main.c    **** CAN_HandleTypeDef hcan1;
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN PV */
  68:Src/main.c    **** CAN_HandleTypeDef hcan1;
  69:Src/main.c    **** CAN_TxHeaderTypeDef pHeader; //declare a specific header for message transmittions
  70:Src/main.c    **** CAN_RxHeaderTypeDef pRxHeader; //declare header for message reception
  71:Src/main.c    **** uint32_t TxMailbox;
  72:Src/main.c    **** uint8_t r; //declare a receive byte
  73:Src/main.c    **** CAN_FilterTypeDef sFilterConfig; //declare CAN filter structure
  74:Src/main.c    **** 
  75:Src/main.c    **** 
  76:Src/main.c    **** uint8_t rts; //right turn signal byte
  77:Src/main.c    **** uint8_t lts; //left turn signal byte
  78:Src/main.c    **** uint8_t horn; //horn
  79:Src/main.c    **** 
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE END PV */
  82:Src/main.c    **** 
  83:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  84:Src/main.c    **** void SystemClock_Config(void);
  85:Src/main.c    **** static void MX_GPIO_Init(void);
  86:Src/main.c    **** static void MX_CAN1_Init(void);
  87:Src/main.c    **** /* USER CODE BEGIN PFP */
  88:Src/main.c    **** 
ARM GAS  /tmp/ccPijiT8.s 			page 3


  89:Src/main.c    **** /* USER CODE END PFP */
  90:Src/main.c    **** 
  91:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  92:Src/main.c    **** /* USER CODE BEGIN 0 */
  93:Src/main.c    **** 
  94:Src/main.c    **** /* USER CODE END 0 */
  95:Src/main.c    **** 
  96:Src/main.c    **** /**
  97:Src/main.c    ****   * @brief  The application entry point.
  98:Src/main.c    ****   * @retval int
  99:Src/main.c    ****   */
 100:Src/main.c    **** int main(void)
 101:Src/main.c    **** {
 102:Src/main.c    ****   /* USER CODE BEGIN 1 */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE END 1 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 109:Src/main.c    ****   HAL_Init();
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE BEGIN Init */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE END Init */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Configure the system clock */
 116:Src/main.c    ****   SystemClock_Config();
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE END SysInit */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Initialize all configured peripherals */
 123:Src/main.c    ****   MX_GPIO_Init();
 124:Src/main.c    ****   MX_CAN1_Init();
 125:Src/main.c    ****   /* USER CODE BEGIN 2 */
 126:Src/main.c    ****   	pHeader.DLC=1; //give message size of 1 byte
 127:Src/main.c    **** 	pHeader.IDE=CAN_ID_STD; //set identifier to standard
 128:Src/main.c    **** 	pHeader.RTR=CAN_RTR_DATA; //set data type to remote transmission request?
 129:Src/main.c    **** 	pHeader.StdId=0x245; //define a standard identifier, used for message identification by filters (s
 130:Src/main.c    **** 	
 131:Src/main.c    **** 	//filter one (stack light blink)
 132:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment=CAN_FILTER_FIFO0; //set fifo assignment
 133:Src/main.c    **** 	sFilterConfig.FilterIdHigh=0x244<<5; //the ID that the filter looks for (switch this for the other
 134:Src/main.c    **** 	sFilterConfig.FilterIdLow=0;
 135:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh=0;
 136:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow=0;
 137:Src/main.c    **** 	sFilterConfig.FilterScale=CAN_FILTERSCALE_32BIT; //set filter scale
 138:Src/main.c    **** 	sFilterConfig.FilterActivation=ENABLE;
 139:Src/main.c    **** 	
 140:Src/main.c    **** 	HAL_CAN_ConfigFilter(&hcan1, &sFilterConfig); //configure CAN filter
 141:Src/main.c    **** 
 142:Src/main.c    **** 	
 143:Src/main.c    **** 	HAL_CAN_Start(&hcan1); //start CAN
 144:Src/main.c    **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING); //enable interrupts
 145:Src/main.c    **** 
ARM GAS  /tmp/ccPijiT8.s 			page 4


 146:Src/main.c    ****   /* USER CODE END 2 */
 147:Src/main.c    **** 
 148:Src/main.c    ****   /* Infinite loop */
 149:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 150:Src/main.c    ****   while (1)
 151:Src/main.c    ****   {
 152:Src/main.c    ****     /* USER CODE END WHILE */
 153:Src/main.c    ****   	//if rts is high, blink rts
 154:Src/main.c    ****   	if(rts==0xFF){
 155:Src/main.c    ****   		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_SET);
 156:Src/main.c    ****   		HAL_Delay(1000);
 157:Src/main.c    ****   		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_RESET);
 158:Src/main.c    ****   		HAL_Delay(1000); 		  		
 159:Src/main.c    ****   	}
 160:Src/main.c    ****   	if(lts==0xFF){
 161:Src/main.c    ****   		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_SET);
 162:Src/main.c    ****   		HAL_Delay(1000);
 163:Src/main.c    ****   		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_RESET);
 164:Src/main.c    ****   		HAL_Delay(1000);   		
 165:Src/main.c    ****   	}
 166:Src/main.c    ****     /* USER CODE BEGIN 3 */
 167:Src/main.c    ****   }
 168:Src/main.c    ****   /* USER CODE END 3 */
 169:Src/main.c    **** }
 170:Src/main.c    **** 
 171:Src/main.c    **** /**
 172:Src/main.c    ****   * @brief System Clock Configuration
 173:Src/main.c    ****   * @retval None
 174:Src/main.c    ****   */
 175:Src/main.c    **** void SystemClock_Config(void)
 176:Src/main.c    **** {
 177:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 178:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 179:Src/main.c    **** 
 180:Src/main.c    ****   /**Configure the main internal regulator output voltage 
 181:Src/main.c    ****   */
 182:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 183:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 184:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 185:Src/main.c    ****   */
 186:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 187:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 188:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 190:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 191:Src/main.c    ****   {
 192:Src/main.c    ****     Error_Handler();
 193:Src/main.c    ****   }
 194:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 195:Src/main.c    ****   */
 196:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 197:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 198:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 199:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 200:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 201:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 202:Src/main.c    **** 
ARM GAS  /tmp/ccPijiT8.s 			page 5


 203:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 204:Src/main.c    ****   {
 205:Src/main.c    ****     Error_Handler();
 206:Src/main.c    ****   }
 207:Src/main.c    **** }
 208:Src/main.c    **** 
 209:Src/main.c    **** /**
 210:Src/main.c    ****   * @brief CAN1 Initialization Function
 211:Src/main.c    ****   * @param None
 212:Src/main.c    ****   * @retval None
 213:Src/main.c    ****   */
 214:Src/main.c    **** static void MX_CAN1_Init(void)
 215:Src/main.c    **** {
 216:Src/main.c    **** 
 217:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 0 */
 218:Src/main.c    **** 
 219:Src/main.c    ****   /* USER CODE END CAN1_Init 0 */
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 1 */
 222:Src/main.c    **** 
 223:Src/main.c    ****   /* USER CODE END CAN1_Init 1 */
 224:Src/main.c    ****   hcan1.Instance = CAN1;
 225:Src/main.c    ****   hcan1.Init.Prescaler = 21;
 226:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 227:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 228:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_12TQ;
 229:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 230:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 231:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 232:Src/main.c    ****   hcan1.Init.AutoWakeUp = DISABLE;
 233:Src/main.c    ****   hcan1.Init.AutoRetransmission = DISABLE;
 234:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 235:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 236:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 237:Src/main.c    ****   {
 238:Src/main.c    ****     Error_Handler();
 239:Src/main.c    ****   }
 240:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 2 */
 241:Src/main.c    **** 
 242:Src/main.c    ****   /* USER CODE END CAN1_Init 2 */
 243:Src/main.c    **** 
 244:Src/main.c    **** }
 245:Src/main.c    **** 
 246:Src/main.c    **** /**
 247:Src/main.c    ****   * @brief GPIO Initialization Function
 248:Src/main.c    ****   * @param None
 249:Src/main.c    ****   * @retval None
 250:Src/main.c    ****   */
 251:Src/main.c    **** static void MX_GPIO_Init(void)
 252:Src/main.c    **** {
  28              		.loc 1 252 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccPijiT8.s 			page 6


  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 253:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 253 0
  42 0004 0024     		movs	r4, #0
  43 0006 0394     		str	r4, [sp, #12]
  44 0008 0494     		str	r4, [sp, #16]
  45 000a 0594     		str	r4, [sp, #20]
  46 000c 0694     		str	r4, [sp, #24]
  47 000e 0794     		str	r4, [sp, #28]
  48              	.LBB2:
 254:Src/main.c    **** 
 255:Src/main.c    ****   /* GPIO Ports Clock Enable */
 256:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 256 0
  50 0010 0094     		str	r4, [sp]
  51 0012 184B     		ldr	r3, .L3
  52 0014 1A6B     		ldr	r2, [r3, #48]
  53 0016 42F08002 		orr	r2, r2, #128
  54 001a 1A63     		str	r2, [r3, #48]
  55 001c 1A6B     		ldr	r2, [r3, #48]
  56 001e 02F08002 		and	r2, r2, #128
  57 0022 0092     		str	r2, [sp]
  58 0024 009A     		ldr	r2, [sp]
  59              	.LBE2:
  60              	.LBB3:
 257:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  61              		.loc 1 257 0
  62 0026 0194     		str	r4, [sp, #4]
  63 0028 1A6B     		ldr	r2, [r3, #48]
  64 002a 42F00402 		orr	r2, r2, #4
  65 002e 1A63     		str	r2, [r3, #48]
  66 0030 1A6B     		ldr	r2, [r3, #48]
  67 0032 02F00402 		and	r2, r2, #4
  68 0036 0192     		str	r2, [sp, #4]
  69 0038 019A     		ldr	r2, [sp, #4]
  70              	.LBE3:
  71              	.LBB4:
 258:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  72              		.loc 1 258 0
  73 003a 0294     		str	r4, [sp, #8]
  74 003c 1A6B     		ldr	r2, [r3, #48]
  75 003e 42F00202 		orr	r2, r2, #2
  76 0042 1A63     		str	r2, [r3, #48]
  77 0044 1B6B     		ldr	r3, [r3, #48]
  78 0046 03F00203 		and	r3, r3, #2
  79 004a 0293     		str	r3, [sp, #8]
  80 004c 029B     		ldr	r3, [sp, #8]
  81              	.LBE4:
 259:Src/main.c    **** 
 260:Src/main.c    ****   /*Configure GPIO pin Output Level */
 261:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2, GPIO_PIN_RESET);
  82              		.loc 1 261 0
ARM GAS  /tmp/ccPijiT8.s 			page 7


  83 004e 0A4D     		ldr	r5, .L3+4
  84 0050 2846     		mov	r0, r5
  85 0052 0721     		movs	r1, #7
  86 0054 2246     		mov	r2, r4
  87 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 262:Src/main.c    **** 
 263:Src/main.c    ****   /*Configure GPIO pins : PC0 PC1 PC2 */
 264:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2;
  89              		.loc 1 264 0
  90 005a 0723     		movs	r3, #7
  91 005c 0393     		str	r3, [sp, #12]
 265:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  92              		.loc 1 265 0
  93 005e 0123     		movs	r3, #1
  94 0060 0493     		str	r3, [sp, #16]
 266:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 266 0
  96 0062 0594     		str	r4, [sp, #20]
 267:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  97              		.loc 1 267 0
  98 0064 0694     		str	r4, [sp, #24]
 268:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  99              		.loc 1 268 0
 100 0066 2846     		mov	r0, r5
 101 0068 03A9     		add	r1, sp, #12
 102 006a FFF7FEFF 		bl	HAL_GPIO_Init
 103              	.LVL1:
 269:Src/main.c    **** 
 270:Src/main.c    **** }
 104              		.loc 1 270 0
 105 006e 09B0     		add	sp, sp, #36
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 12
 108              		@ sp needed
 109 0070 30BD     		pop	{r4, r5, pc}
 110              	.L4:
 111 0072 00BF     		.align	2
 112              	.L3:
 113 0074 00380240 		.word	1073887232
 114 0078 00080240 		.word	1073874944
 115              		.cfi_endproc
 116              	.LFE126:
 118              		.section	.text.MX_CAN1_Init,"ax",%progbits
 119              		.align	2
 120              		.thumb
 121              		.thumb_func
 123              	MX_CAN1_Init:
 124              	.LFB125:
 215:Src/main.c    **** 
 125              		.loc 1 215 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129 0000 08B5     		push	{r3, lr}
 130              	.LCFI3:
 131              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccPijiT8.s 			page 8


 132              		.cfi_offset 3, -8
 133              		.cfi_offset 14, -4
 224:Src/main.c    ****   hcan1.Init.Prescaler = 21;
 134              		.loc 1 224 0
 135 0002 0B48     		ldr	r0, .L7
 136 0004 0B4B     		ldr	r3, .L7+4
 137 0006 0360     		str	r3, [r0]
 225:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 138              		.loc 1 225 0
 139 0008 1523     		movs	r3, #21
 140 000a 4360     		str	r3, [r0, #4]
 226:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 141              		.loc 1 226 0
 142 000c 0023     		movs	r3, #0
 143 000e 8360     		str	r3, [r0, #8]
 227:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_12TQ;
 144              		.loc 1 227 0
 145 0010 C360     		str	r3, [r0, #12]
 228:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 146              		.loc 1 228 0
 147 0012 4FF43022 		mov	r2, #720896
 148 0016 0261     		str	r2, [r0, #16]
 229:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 149              		.loc 1 229 0
 150 0018 4FF44012 		mov	r2, #3145728
 151 001c 4261     		str	r2, [r0, #20]
 230:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 152              		.loc 1 230 0
 153 001e 0376     		strb	r3, [r0, #24]
 231:Src/main.c    ****   hcan1.Init.AutoWakeUp = DISABLE;
 154              		.loc 1 231 0
 155 0020 4376     		strb	r3, [r0, #25]
 232:Src/main.c    ****   hcan1.Init.AutoRetransmission = DISABLE;
 156              		.loc 1 232 0
 157 0022 8376     		strb	r3, [r0, #26]
 233:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 158              		.loc 1 233 0
 159 0024 C376     		strb	r3, [r0, #27]
 234:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 160              		.loc 1 234 0
 161 0026 0377     		strb	r3, [r0, #28]
 235:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 162              		.loc 1 235 0
 163 0028 4377     		strb	r3, [r0, #29]
 236:Src/main.c    ****   {
 164              		.loc 1 236 0
 165 002a FFF7FEFF 		bl	HAL_CAN_Init
 166              	.LVL2:
 167 002e 08BD     		pop	{r3, pc}
 168              	.L8:
 169              		.align	2
 170              	.L7:
 171 0030 00000000 		.word	hcan1
 172 0034 00640040 		.word	1073767424
 173              		.cfi_endproc
 174              	.LFE125:
 176              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  /tmp/ccPijiT8.s 			page 9


 177              		.align	2
 178              		.global	SystemClock_Config
 179              		.thumb
 180              		.thumb_func
 182              	SystemClock_Config:
 183              	.LFB124:
 176:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 184              		.loc 1 176 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 80
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 10B5     		push	{r4, lr}
 189              	.LCFI4:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 4, -8
 192              		.cfi_offset 14, -4
 193 0002 94B0     		sub	sp, sp, #80
 194              	.LCFI5:
 195              		.cfi_def_cfa_offset 88
 177:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 196              		.loc 1 177 0
 197 0004 0024     		movs	r4, #0
 198 0006 0894     		str	r4, [sp, #32]
 199 0008 0994     		str	r4, [sp, #36]
 200 000a 0A94     		str	r4, [sp, #40]
 201 000c 0B94     		str	r4, [sp, #44]
 202 000e 0C94     		str	r4, [sp, #48]
 203 0010 0D94     		str	r4, [sp, #52]
 204 0012 0E94     		str	r4, [sp, #56]
 205 0014 0F94     		str	r4, [sp, #60]
 206 0016 1094     		str	r4, [sp, #64]
 207 0018 1194     		str	r4, [sp, #68]
 208 001a 1294     		str	r4, [sp, #72]
 209 001c 1394     		str	r4, [sp, #76]
 178:Src/main.c    **** 
 210              		.loc 1 178 0
 211 001e 0394     		str	r4, [sp, #12]
 212 0020 0494     		str	r4, [sp, #16]
 213 0022 0594     		str	r4, [sp, #20]
 214 0024 0694     		str	r4, [sp, #24]
 215 0026 0794     		str	r4, [sp, #28]
 216              	.LBB5:
 182:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 217              		.loc 1 182 0
 218 0028 0194     		str	r4, [sp, #4]
 219 002a 154B     		ldr	r3, .L11
 220 002c 1A6C     		ldr	r2, [r3, #64]
 221 002e 42F08052 		orr	r2, r2, #268435456
 222 0032 1A64     		str	r2, [r3, #64]
 223 0034 1B6C     		ldr	r3, [r3, #64]
 224 0036 03F08053 		and	r3, r3, #268435456
 225 003a 0193     		str	r3, [sp, #4]
 226 003c 019B     		ldr	r3, [sp, #4]
 227              	.LBE5:
 228              	.LBB6:
 183:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 229              		.loc 1 183 0
ARM GAS  /tmp/ccPijiT8.s 			page 10


 230 003e 0294     		str	r4, [sp, #8]
 231 0040 104B     		ldr	r3, .L11+4
 232 0042 1A68     		ldr	r2, [r3]
 233 0044 42F48042 		orr	r2, r2, #16384
 234 0048 1A60     		str	r2, [r3]
 235 004a 1B68     		ldr	r3, [r3]
 236 004c 03F48043 		and	r3, r3, #16384
 237 0050 0293     		str	r3, [sp, #8]
 238 0052 029B     		ldr	r3, [sp, #8]
 239              	.LBE6:
 186:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 240              		.loc 1 186 0
 241 0054 0223     		movs	r3, #2
 242 0056 0893     		str	r3, [sp, #32]
 187:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 243              		.loc 1 187 0
 244 0058 0123     		movs	r3, #1
 245 005a 0B93     		str	r3, [sp, #44]
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 246              		.loc 1 188 0
 247 005c 1023     		movs	r3, #16
 248 005e 0C93     		str	r3, [sp, #48]
 189:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 249              		.loc 1 189 0
 250 0060 0E94     		str	r4, [sp, #56]
 190:Src/main.c    ****   {
 251              		.loc 1 190 0
 252 0062 08A8     		add	r0, sp, #32
 253 0064 FFF7FEFF 		bl	HAL_RCC_OscConfig
 254              	.LVL3:
 196:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 255              		.loc 1 196 0
 256 0068 0F23     		movs	r3, #15
 257 006a 0393     		str	r3, [sp, #12]
 198:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 258              		.loc 1 198 0
 259 006c 0494     		str	r4, [sp, #16]
 199:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 260              		.loc 1 199 0
 261 006e 0594     		str	r4, [sp, #20]
 200:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 262              		.loc 1 200 0
 263 0070 0694     		str	r4, [sp, #24]
 201:Src/main.c    **** 
 264              		.loc 1 201 0
 265 0072 0794     		str	r4, [sp, #28]
 203:Src/main.c    ****   {
 266              		.loc 1 203 0
 267 0074 03A8     		add	r0, sp, #12
 268 0076 2146     		mov	r1, r4
 269 0078 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 270              	.LVL4:
 207:Src/main.c    **** 
 271              		.loc 1 207 0
 272 007c 14B0     		add	sp, sp, #80
 273              	.LCFI6:
 274              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccPijiT8.s 			page 11


 275              		@ sp needed
 276 007e 10BD     		pop	{r4, pc}
 277              	.L12:
 278              		.align	2
 279              	.L11:
 280 0080 00380240 		.word	1073887232
 281 0084 00700040 		.word	1073770496
 282              		.cfi_endproc
 283              	.LFE124:
 285              		.section	.text.main,"ax",%progbits
 286              		.align	2
 287              		.global	main
 288              		.thumb
 289              		.thumb_func
 291              	main:
 292              	.LFB123:
 101:Src/main.c    ****   /* USER CODE BEGIN 1 */
 293              		.loc 1 101 0
 294              		.cfi_startproc
 295              		@ Volatile: function does not return.
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298 0000 08B5     		push	{r3, lr}
 299              	.LCFI7:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 3, -8
 302              		.cfi_offset 14, -4
 109:Src/main.c    **** 
 303              		.loc 1 109 0
 304 0002 FFF7FEFF 		bl	HAL_Init
 305              	.LVL5:
 116:Src/main.c    **** 
 306              		.loc 1 116 0
 307 0006 FFF7FEFF 		bl	SystemClock_Config
 308              	.LVL6:
 123:Src/main.c    ****   MX_CAN1_Init();
 309              		.loc 1 123 0
 310 000a FFF7FEFF 		bl	MX_GPIO_Init
 311              	.LVL7:
 124:Src/main.c    ****   /* USER CODE BEGIN 2 */
 312              		.loc 1 124 0
 313 000e FFF7FEFF 		bl	MX_CAN1_Init
 314              	.LVL8:
 126:Src/main.c    **** 	pHeader.IDE=CAN_ID_STD; //set identifier to standard
 315              		.loc 1 126 0
 316 0012 264A     		ldr	r2, .L18
 317 0014 0120     		movs	r0, #1
 318 0016 1061     		str	r0, [r2, #16]
 127:Src/main.c    **** 	pHeader.RTR=CAN_RTR_DATA; //set data type to remote transmission request?
 319              		.loc 1 127 0
 320 0018 0023     		movs	r3, #0
 321 001a 9360     		str	r3, [r2, #8]
 128:Src/main.c    **** 	pHeader.StdId=0x245; //define a standard identifier, used for message identification by filters (s
 322              		.loc 1 128 0
 323 001c D360     		str	r3, [r2, #12]
 129:Src/main.c    **** 	
 324              		.loc 1 129 0
ARM GAS  /tmp/ccPijiT8.s 			page 12


 325 001e 40F24521 		movw	r1, #581
 326 0022 1160     		str	r1, [r2]
 132:Src/main.c    **** 	sFilterConfig.FilterIdHigh=0x244<<5; //the ID that the filter looks for (switch this for the other
 327              		.loc 1 132 0
 328 0024 2249     		ldr	r1, .L18+4
 329 0026 0B61     		str	r3, [r1, #16]
 133:Src/main.c    **** 	sFilterConfig.FilterIdLow=0;
 330              		.loc 1 133 0
 331 0028 4FF49142 		mov	r2, #18560
 332 002c 0A60     		str	r2, [r1]
 134:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh=0;
 333              		.loc 1 134 0
 334 002e 4B60     		str	r3, [r1, #4]
 135:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow=0;
 335              		.loc 1 135 0
 336 0030 8B60     		str	r3, [r1, #8]
 136:Src/main.c    **** 	sFilterConfig.FilterScale=CAN_FILTERSCALE_32BIT; //set filter scale
 337              		.loc 1 136 0
 338 0032 CB60     		str	r3, [r1, #12]
 137:Src/main.c    **** 	sFilterConfig.FilterActivation=ENABLE;
 339              		.loc 1 137 0
 340 0034 C861     		str	r0, [r1, #28]
 138:Src/main.c    **** 	
 341              		.loc 1 138 0
 342 0036 0862     		str	r0, [r1, #32]
 140:Src/main.c    **** 
 343              		.loc 1 140 0
 344 0038 1E4C     		ldr	r4, .L18+8
 345 003a 2046     		mov	r0, r4
 346 003c FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 347              	.LVL9:
 143:Src/main.c    **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING); //enable interrupts
 348              		.loc 1 143 0
 349 0040 2046     		mov	r0, r4
 350 0042 FFF7FEFF 		bl	HAL_CAN_Start
 351              	.LVL10:
 144:Src/main.c    **** 
 352              		.loc 1 144 0
 353 0046 2046     		mov	r0, r4
 354 0048 0221     		movs	r1, #2
 355 004a FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 356              	.LVL11:
 357              	.L15:
 154:Src/main.c    ****   		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_SET);
 358              		.loc 1 154 0
 359 004e 1A4B     		ldr	r3, .L18+12
 360 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 361 0052 FF2B     		cmp	r3, #255
 362 0054 12D1     		bne	.L14
 155:Src/main.c    ****   		HAL_Delay(1000);
 363              		.loc 1 155 0
 364 0056 194C     		ldr	r4, .L18+16
 365 0058 2046     		mov	r0, r4
 366 005a 0121     		movs	r1, #1
 367 005c 0A46     		mov	r2, r1
 368 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 369              	.LVL12:
ARM GAS  /tmp/ccPijiT8.s 			page 13


 156:Src/main.c    ****   		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_RESET);
 370              		.loc 1 156 0
 371 0062 4FF47A70 		mov	r0, #1000
 372 0066 FFF7FEFF 		bl	HAL_Delay
 373              	.LVL13:
 157:Src/main.c    ****   		HAL_Delay(1000); 		  		
 374              		.loc 1 157 0
 375 006a 2046     		mov	r0, r4
 376 006c 0121     		movs	r1, #1
 377 006e 0022     		movs	r2, #0
 378 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 379              	.LVL14:
 158:Src/main.c    ****   	}
 380              		.loc 1 158 0
 381 0074 4FF47A70 		mov	r0, #1000
 382 0078 FFF7FEFF 		bl	HAL_Delay
 383              	.LVL15:
 384              	.L14:
 160:Src/main.c    ****   		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_SET);
 385              		.loc 1 160 0
 386 007c 104B     		ldr	r3, .L18+20
 387 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 388 0080 FF2B     		cmp	r3, #255
 389 0082 E4D1     		bne	.L15
 161:Src/main.c    ****   		HAL_Delay(1000);
 390              		.loc 1 161 0
 391 0084 0D4C     		ldr	r4, .L18+16
 392 0086 2046     		mov	r0, r4
 393 0088 0221     		movs	r1, #2
 394 008a 0122     		movs	r2, #1
 395 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 396              	.LVL16:
 162:Src/main.c    ****   		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_RESET);
 397              		.loc 1 162 0
 398 0090 4FF47A70 		mov	r0, #1000
 399 0094 FFF7FEFF 		bl	HAL_Delay
 400              	.LVL17:
 163:Src/main.c    ****   		HAL_Delay(1000);   		
 401              		.loc 1 163 0
 402 0098 2046     		mov	r0, r4
 403 009a 0221     		movs	r1, #2
 404 009c 0022     		movs	r2, #0
 405 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 406              	.LVL18:
 164:Src/main.c    ****   	}
 407              		.loc 1 164 0
 408 00a2 4FF47A70 		mov	r0, #1000
 409 00a6 FFF7FEFF 		bl	HAL_Delay
 410              	.LVL19:
 411 00aa D0E7     		b	.L15
 412              	.L19:
 413              		.align	2
 414              	.L18:
 415 00ac 00000000 		.word	pHeader
 416 00b0 00000000 		.word	sFilterConfig
 417 00b4 00000000 		.word	hcan1
 418 00b8 00000000 		.word	rts
ARM GAS  /tmp/ccPijiT8.s 			page 14


 419 00bc 00080240 		.word	1073874944
 420 00c0 00000000 		.word	lts
 421              		.cfi_endproc
 422              	.LFE123:
 424              		.section	.text.Error_Handler,"ax",%progbits
 425              		.align	2
 426              		.global	Error_Handler
 427              		.thumb
 428              		.thumb_func
 430              	Error_Handler:
 431              	.LFB127:
 271:Src/main.c    **** 
 272:Src/main.c    **** /* USER CODE BEGIN 4 */
 273:Src/main.c    **** 
 274:Src/main.c    **** /* USER CODE END 4 */
 275:Src/main.c    **** 
 276:Src/main.c    **** /**
 277:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 278:Src/main.c    ****   * @retval None
 279:Src/main.c    ****   */
 280:Src/main.c    **** void Error_Handler(void)
 281:Src/main.c    **** {
 432              		.loc 1 281 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437 0000 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE127:
 441              		.comm	horn,1,1
 442              		.comm	lts,1,1
 443              		.comm	rts,1,1
 444              		.comm	sFilterConfig,40,4
 445              		.comm	r,1,1
 446              		.comm	TxMailbox,4,4
 447              		.comm	pRxHeader,28,4
 448              		.comm	pHeader,24,4
 449              		.comm	hcan1,40,4
 450 0002 00BF     		.text
 451              	.Letext0:
 452              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 453              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 454              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 455              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 456              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 457              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 458              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 459              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 460              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 461              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 462              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccPijiT8.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccPijiT8.s:21     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccPijiT8.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccPijiT8.s:113    .text.MX_GPIO_Init:0000000000000074 $d
     /tmp/ccPijiT8.s:119    .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccPijiT8.s:123    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccPijiT8.s:171    .text.MX_CAN1_Init:0000000000000030 $d
                            *COM*:0000000000000028 hcan1
     /tmp/ccPijiT8.s:177    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccPijiT8.s:182    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccPijiT8.s:280    .text.SystemClock_Config:0000000000000080 $d
     /tmp/ccPijiT8.s:286    .text.main:0000000000000000 $t
     /tmp/ccPijiT8.s:291    .text.main:0000000000000000 main
     /tmp/ccPijiT8.s:415    .text.main:00000000000000ac $d
                            *COM*:0000000000000018 pHeader
                            *COM*:0000000000000028 sFilterConfig
                            *COM*:0000000000000001 rts
                            *COM*:0000000000000001 lts
     /tmp/ccPijiT8.s:425    .text.Error_Handler:0000000000000000 $t
     /tmp/ccPijiT8.s:430    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000001 horn
                            *COM*:0000000000000001 r
                            *COM*:0000000000000004 TxMailbox
                            *COM*:000000000000001c pRxHeader
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_CAN_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_Delay
