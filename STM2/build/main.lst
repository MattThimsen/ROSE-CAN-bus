ARM GAS  /tmp/ccx1cz4G.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB126:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccx1cz4G.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  50:Src/main.c    **** /* USER CODE BEGIN PTD */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PTD */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  55:Src/main.c    **** /* USER CODE BEGIN PD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN PM */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PM */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  65:Src/main.c    **** CAN_HandleTypeDef hcan1;
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN PV */
  68:Src/main.c    **** CAN_HandleTypeDef hcan1;
  69:Src/main.c    **** CAN_TxHeaderTypeDef pHeader; //declare a specific header for message transmittions
  70:Src/main.c    **** CAN_RxHeaderTypeDef pRxHeader; //declare header for message reception
  71:Src/main.c    **** uint32_t TxMailbox;
  72:Src/main.c    **** uint8_t a; //declare a send byte
  73:Src/main.c    **** CAN_FilterTypeDef sFilterConfig; //declare CAN filter structure
  74:Src/main.c    **** 
  75:Src/main.c    **** 
  76:Src/main.c    **** uint8_t rts; //right turn signal byte
  77:Src/main.c    **** uint8_t lts; //left turn signal byte
  78:Src/main.c    **** uint8_t horn; //horn
  79:Src/main.c    **** 
  80:Src/main.c    **** int lts_holder;
  81:Src/main.c    **** int rts_holder;
  82:Src/main.c    **** int horn_holder;
  83:Src/main.c    **** /* USER CODE END PV */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  86:Src/main.c    **** void SystemClock_Config(void);
  87:Src/main.c    **** static void MX_GPIO_Init(void);
  88:Src/main.c    **** static void MX_CAN1_Init(void);
ARM GAS  /tmp/ccx1cz4G.s 			page 3


  89:Src/main.c    **** /* USER CODE BEGIN PFP */
  90:Src/main.c    **** 
  91:Src/main.c    **** /* USER CODE END PFP */
  92:Src/main.c    **** 
  93:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  94:Src/main.c    **** /* USER CODE BEGIN 0 */
  95:Src/main.c    **** 
  96:Src/main.c    **** /* USER CODE END 0 */
  97:Src/main.c    **** 
  98:Src/main.c    **** /**
  99:Src/main.c    ****   * @brief  The application entry point.
 100:Src/main.c    ****   * @retval int
 101:Src/main.c    ****   */
 102:Src/main.c    **** int main(void)
 103:Src/main.c    **** {
 104:Src/main.c    ****   /* USER CODE BEGIN 1 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END 1 */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 111:Src/main.c    ****   HAL_Init();
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN Init */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END Init */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Configure the system clock */
 118:Src/main.c    ****   SystemClock_Config();
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE END SysInit */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* Initialize all configured peripherals */
 125:Src/main.c    ****   MX_GPIO_Init();
 126:Src/main.c    ****   MX_CAN1_Init();
 127:Src/main.c    ****   /* USER CODE BEGIN 2 */
 128:Src/main.c    ****   pHeader.DLC=1; //give message size of 1 byte
 129:Src/main.c    ****   pHeader.IDE=CAN_ID_STD; //set identifier to standard
 130:Src/main.c    ****   pHeader.RTR=CAN_RTR_DATA; //set data type to remote transmission request?
 131:Src/main.c    ****   pHeader.StdId=0x244; //define a standard identifier, used for message identification by filters (
 132:Src/main.c    ****   
 133:Src/main.c    ****   //filter one (stack light blink)
 134:Src/main.c    ****   sFilterConfig.FilterFIFOAssignment=CAN_FILTER_FIFO0; //set fifo assignment
 135:Src/main.c    ****   sFilterConfig.FilterIdHigh=0x245<<5; //the ID that the filter looks for (switch this for the othe
 136:Src/main.c    ****   sFilterConfig.FilterIdLow=0;
 137:Src/main.c    ****   sFilterConfig.FilterMaskIdHigh=0;
 138:Src/main.c    ****   sFilterConfig.FilterMaskIdLow=0;
 139:Src/main.c    ****   sFilterConfig.FilterScale=CAN_FILTERSCALE_32BIT; //set filter scale
 140:Src/main.c    ****   sFilterConfig.FilterActivation=ENABLE;
 141:Src/main.c    ****   
 142:Src/main.c    ****   HAL_CAN_ConfigFilter(&hcan1, &sFilterConfig); //configure CAN filter
 143:Src/main.c    **** 
 144:Src/main.c    ****   
 145:Src/main.c    ****   HAL_CAN_Start(&hcan1); //start CAN
ARM GAS  /tmp/ccx1cz4G.s 			page 4


 146:Src/main.c    ****   //not sure i need this
 147:Src/main.c    ****   HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING); //enable interrupts
 148:Src/main.c    **** 
 149:Src/main.c    ****   /* USER CODE END 2 */
 150:Src/main.c    **** 
 151:Src/main.c    ****   /* Infinite loop */
 152:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 153:Src/main.c    ****   while (1)
 154:Src/main.c    ****   {
 155:Src/main.c    ****     lts_holder = HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_0);
 156:Src/main.c    ****     rts_holder = HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_0);
 157:Src/main.c    ****     horn_holder = HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_0);
 158:Src/main.c    **** 
 159:Src/main.c    ****     HAL_Delay(2);
 160:Src/main.c    ****     /* USER CODE END WHILE */
 161:Src/main.c    ****     if(lts_holder != HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_0)) {
 162:Src/main.c    ****       //send can message
 163:Src/main.c    ****       a=0x00;
 164:Src/main.c    ****       //MIGHT NEED TO RE-ADD POINTERS
 165:Src/main.c    ****       HAL_CAN_AddTxMessage(&hcan1, &pHeader, &a, &TxMailbox);  //function to add message for transm
 166:Src/main.c    **** 
 167:Src/main.c    ****     }
 168:Src/main.c    ****     if(rts_holder != HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_1)) {
 169:Src/main.c    ****       //send can message
 170:Src/main.c    ****       a=0x02;
 171:Src/main.c    ****       HAL_CAN_AddTxMessage(&hcan1, &pHeader, &a, &TxMailbox);  //function to add message for transm
 172:Src/main.c    **** 
 173:Src/main.c    ****     }
 174:Src/main.c    ****     /* USER CODE BEGIN 3 */
 175:Src/main.c    ****   }
 176:Src/main.c    ****   /* USER CODE END 3 */
 177:Src/main.c    **** }
 178:Src/main.c    **** 
 179:Src/main.c    **** /**
 180:Src/main.c    ****   * @brief System Clock Configuration
 181:Src/main.c    ****   * @retval None
 182:Src/main.c    ****   */
 183:Src/main.c    **** void SystemClock_Config(void)
 184:Src/main.c    **** {
 185:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 186:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 187:Src/main.c    **** 
 188:Src/main.c    ****   /**Configure the main internal regulator output voltage 
 189:Src/main.c    ****   */
 190:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 191:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 192:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 193:Src/main.c    ****   */
 194:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 195:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 196:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 198:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 199:Src/main.c    ****   {
 200:Src/main.c    ****     Error_Handler();
 201:Src/main.c    ****   }
 202:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/ccx1cz4G.s 			page 5


 203:Src/main.c    ****   */
 204:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 205:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 206:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 207:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 208:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 209:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 210:Src/main.c    **** 
 211:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 212:Src/main.c    ****   {
 213:Src/main.c    ****     Error_Handler();
 214:Src/main.c    ****   }
 215:Src/main.c    **** }
 216:Src/main.c    **** 
 217:Src/main.c    **** /**
 218:Src/main.c    ****   * @brief CAN1 Initialization Function
 219:Src/main.c    ****   * @param None
 220:Src/main.c    ****   * @retval None
 221:Src/main.c    ****   */
 222:Src/main.c    **** static void MX_CAN1_Init(void)
 223:Src/main.c    **** {
 224:Src/main.c    **** 
 225:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 0 */
 226:Src/main.c    **** 
 227:Src/main.c    ****   /* USER CODE END CAN1_Init 0 */
 228:Src/main.c    **** 
 229:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 1 */
 230:Src/main.c    **** 
 231:Src/main.c    ****   /* USER CODE END CAN1_Init 1 */
 232:Src/main.c    ****   hcan1.Instance = CAN1;
 233:Src/main.c    ****   hcan1.Init.Prescaler = 21;
 234:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 235:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 236:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_12TQ;
 237:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 238:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 239:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 240:Src/main.c    ****   hcan1.Init.AutoWakeUp = DISABLE;
 241:Src/main.c    ****   hcan1.Init.AutoRetransmission = DISABLE;
 242:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 243:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 244:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 245:Src/main.c    ****   {
 246:Src/main.c    ****     Error_Handler();
 247:Src/main.c    ****   }
 248:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 2 */
 249:Src/main.c    **** 
 250:Src/main.c    ****   /* USER CODE END CAN1_Init 2 */
 251:Src/main.c    **** 
 252:Src/main.c    **** }
 253:Src/main.c    **** 
 254:Src/main.c    **** /**
 255:Src/main.c    ****   * @brief GPIO Initialization Function
 256:Src/main.c    ****   * @param None
 257:Src/main.c    ****   * @retval None
 258:Src/main.c    ****   */
 259:Src/main.c    **** static void MX_GPIO_Init(void)
ARM GAS  /tmp/ccx1cz4G.s 			page 6


 260:Src/main.c    **** {
  28              		.loc 1 260 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 261:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 261 0
  40 0004 0022     		movs	r2, #0
  41 0006 0392     		str	r2, [sp, #12]
  42 0008 0492     		str	r2, [sp, #16]
  43 000a 0592     		str	r2, [sp, #20]
  44 000c 0692     		str	r2, [sp, #24]
  45 000e 0792     		str	r2, [sp, #28]
  46              	.LBB2:
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* GPIO Ports Clock Enable */
 264:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  47              		.loc 1 264 0
  48 0010 0092     		str	r2, [sp]
  49 0012 144B     		ldr	r3, .L3
  50 0014 196B     		ldr	r1, [r3, #48]
  51 0016 41F01001 		orr	r1, r1, #16
  52 001a 1963     		str	r1, [r3, #48]
  53 001c 196B     		ldr	r1, [r3, #48]
  54 001e 01F01001 		and	r1, r1, #16
  55 0022 0091     		str	r1, [sp]
  56 0024 0099     		ldr	r1, [sp]
  57              	.LBE2:
  58              	.LBB3:
 265:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  59              		.loc 1 265 0
  60 0026 0192     		str	r2, [sp, #4]
  61 0028 196B     		ldr	r1, [r3, #48]
  62 002a 41F08001 		orr	r1, r1, #128
  63 002e 1963     		str	r1, [r3, #48]
  64 0030 196B     		ldr	r1, [r3, #48]
  65 0032 01F08001 		and	r1, r1, #128
  66 0036 0191     		str	r1, [sp, #4]
  67 0038 0199     		ldr	r1, [sp, #4]
  68              	.LBE3:
  69              	.LBB4:
 266:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  70              		.loc 1 266 0
  71 003a 0292     		str	r2, [sp, #8]
  72 003c 1A6B     		ldr	r2, [r3, #48]
  73 003e 42F00202 		orr	r2, r2, #2
  74 0042 1A63     		str	r2, [r3, #48]
  75 0044 1B6B     		ldr	r3, [r3, #48]
  76 0046 03F00203 		and	r3, r3, #2
  77 004a 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccx1cz4G.s 			page 7


  78 004c 029B     		ldr	r3, [sp, #8]
  79              	.LBE4:
 267:Src/main.c    **** 
 268:Src/main.c    ****   /*Configure GPIO pins : PE2 PE0 PE1 */
 269:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_0|GPIO_PIN_1;
  80              		.loc 1 269 0
  81 004e 08A9     		add	r1, sp, #32
  82 0050 0723     		movs	r3, #7
  83 0052 41F8143D 		str	r3, [r1, #-20]!
 270:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 271:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 272:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
  84              		.loc 1 272 0
  85 0056 0448     		ldr	r0, .L3+4
  86 0058 FFF7FEFF 		bl	HAL_GPIO_Init
  87              	.LVL0:
 273:Src/main.c    **** 
 274:Src/main.c    **** }
  88              		.loc 1 274 0
  89 005c 09B0     		add	sp, sp, #36
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 4
  92              		@ sp needed
  93 005e 5DF804FB 		ldr	pc, [sp], #4
  94              	.L4:
  95 0062 00BF     		.align	2
  96              	.L3:
  97 0064 00380240 		.word	1073887232
  98 0068 00100240 		.word	1073876992
  99              		.cfi_endproc
 100              	.LFE126:
 102              		.section	.text.MX_CAN1_Init,"ax",%progbits
 103              		.align	2
 104              		.thumb
 105              		.thumb_func
 107              	MX_CAN1_Init:
 108              	.LFB125:
 223:Src/main.c    **** 
 109              		.loc 1 223 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 08B5     		push	{r3, lr}
 114              	.LCFI3:
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 3, -8
 117              		.cfi_offset 14, -4
 232:Src/main.c    ****   hcan1.Init.Prescaler = 21;
 118              		.loc 1 232 0
 119 0002 0B48     		ldr	r0, .L7
 120 0004 0B4B     		ldr	r3, .L7+4
 121 0006 0360     		str	r3, [r0]
 233:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 122              		.loc 1 233 0
 123 0008 1523     		movs	r3, #21
 124 000a 4360     		str	r3, [r0, #4]
 234:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
ARM GAS  /tmp/ccx1cz4G.s 			page 8


 125              		.loc 1 234 0
 126 000c 0023     		movs	r3, #0
 127 000e 8360     		str	r3, [r0, #8]
 235:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_12TQ;
 128              		.loc 1 235 0
 129 0010 C360     		str	r3, [r0, #12]
 236:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 130              		.loc 1 236 0
 131 0012 4FF43022 		mov	r2, #720896
 132 0016 0261     		str	r2, [r0, #16]
 237:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 133              		.loc 1 237 0
 134 0018 4FF44012 		mov	r2, #3145728
 135 001c 4261     		str	r2, [r0, #20]
 238:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 136              		.loc 1 238 0
 137 001e 0376     		strb	r3, [r0, #24]
 239:Src/main.c    ****   hcan1.Init.AutoWakeUp = DISABLE;
 138              		.loc 1 239 0
 139 0020 4376     		strb	r3, [r0, #25]
 240:Src/main.c    ****   hcan1.Init.AutoRetransmission = DISABLE;
 140              		.loc 1 240 0
 141 0022 8376     		strb	r3, [r0, #26]
 241:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 142              		.loc 1 241 0
 143 0024 C376     		strb	r3, [r0, #27]
 242:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 144              		.loc 1 242 0
 145 0026 0377     		strb	r3, [r0, #28]
 243:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 146              		.loc 1 243 0
 147 0028 4377     		strb	r3, [r0, #29]
 244:Src/main.c    ****   {
 148              		.loc 1 244 0
 149 002a FFF7FEFF 		bl	HAL_CAN_Init
 150              	.LVL1:
 151 002e 08BD     		pop	{r3, pc}
 152              	.L8:
 153              		.align	2
 154              	.L7:
 155 0030 00000000 		.word	hcan1
 156 0034 00640040 		.word	1073767424
 157              		.cfi_endproc
 158              	.LFE125:
 160              		.section	.text.SystemClock_Config,"ax",%progbits
 161              		.align	2
 162              		.global	SystemClock_Config
 163              		.thumb
 164              		.thumb_func
 166              	SystemClock_Config:
 167              	.LFB124:
 184:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 168              		.loc 1 184 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 80
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccx1cz4G.s 			page 9


 173              	.LCFI4:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 4, -8
 176              		.cfi_offset 14, -4
 177 0002 94B0     		sub	sp, sp, #80
 178              	.LCFI5:
 179              		.cfi_def_cfa_offset 88
 185:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 180              		.loc 1 185 0
 181 0004 0024     		movs	r4, #0
 182 0006 0894     		str	r4, [sp, #32]
 183 0008 0994     		str	r4, [sp, #36]
 184 000a 0A94     		str	r4, [sp, #40]
 185 000c 0B94     		str	r4, [sp, #44]
 186 000e 0C94     		str	r4, [sp, #48]
 187 0010 0D94     		str	r4, [sp, #52]
 188 0012 0E94     		str	r4, [sp, #56]
 189 0014 0F94     		str	r4, [sp, #60]
 190 0016 1094     		str	r4, [sp, #64]
 191 0018 1194     		str	r4, [sp, #68]
 192 001a 1294     		str	r4, [sp, #72]
 193 001c 1394     		str	r4, [sp, #76]
 186:Src/main.c    **** 
 194              		.loc 1 186 0
 195 001e 0394     		str	r4, [sp, #12]
 196 0020 0494     		str	r4, [sp, #16]
 197 0022 0594     		str	r4, [sp, #20]
 198 0024 0694     		str	r4, [sp, #24]
 199 0026 0794     		str	r4, [sp, #28]
 200              	.LBB5:
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 201              		.loc 1 190 0
 202 0028 0194     		str	r4, [sp, #4]
 203 002a 154B     		ldr	r3, .L11
 204 002c 1A6C     		ldr	r2, [r3, #64]
 205 002e 42F08052 		orr	r2, r2, #268435456
 206 0032 1A64     		str	r2, [r3, #64]
 207 0034 1B6C     		ldr	r3, [r3, #64]
 208 0036 03F08053 		and	r3, r3, #268435456
 209 003a 0193     		str	r3, [sp, #4]
 210 003c 019B     		ldr	r3, [sp, #4]
 211              	.LBE5:
 212              	.LBB6:
 191:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 213              		.loc 1 191 0
 214 003e 0294     		str	r4, [sp, #8]
 215 0040 104B     		ldr	r3, .L11+4
 216 0042 1A68     		ldr	r2, [r3]
 217 0044 42F48042 		orr	r2, r2, #16384
 218 0048 1A60     		str	r2, [r3]
 219 004a 1B68     		ldr	r3, [r3]
 220 004c 03F48043 		and	r3, r3, #16384
 221 0050 0293     		str	r3, [sp, #8]
 222 0052 029B     		ldr	r3, [sp, #8]
 223              	.LBE6:
 194:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 224              		.loc 1 194 0
ARM GAS  /tmp/ccx1cz4G.s 			page 10


 225 0054 0223     		movs	r3, #2
 226 0056 0893     		str	r3, [sp, #32]
 195:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 227              		.loc 1 195 0
 228 0058 0123     		movs	r3, #1
 229 005a 0B93     		str	r3, [sp, #44]
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 230              		.loc 1 196 0
 231 005c 1023     		movs	r3, #16
 232 005e 0C93     		str	r3, [sp, #48]
 197:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 233              		.loc 1 197 0
 234 0060 0E94     		str	r4, [sp, #56]
 198:Src/main.c    ****   {
 235              		.loc 1 198 0
 236 0062 08A8     		add	r0, sp, #32
 237 0064 FFF7FEFF 		bl	HAL_RCC_OscConfig
 238              	.LVL2:
 204:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 239              		.loc 1 204 0
 240 0068 0F23     		movs	r3, #15
 241 006a 0393     		str	r3, [sp, #12]
 206:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 242              		.loc 1 206 0
 243 006c 0494     		str	r4, [sp, #16]
 207:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 244              		.loc 1 207 0
 245 006e 0594     		str	r4, [sp, #20]
 208:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 246              		.loc 1 208 0
 247 0070 0694     		str	r4, [sp, #24]
 209:Src/main.c    **** 
 248              		.loc 1 209 0
 249 0072 0794     		str	r4, [sp, #28]
 211:Src/main.c    ****   {
 250              		.loc 1 211 0
 251 0074 03A8     		add	r0, sp, #12
 252 0076 2146     		mov	r1, r4
 253 0078 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 254              	.LVL3:
 215:Src/main.c    **** 
 255              		.loc 1 215 0
 256 007c 14B0     		add	sp, sp, #80
 257              	.LCFI6:
 258              		.cfi_def_cfa_offset 8
 259              		@ sp needed
 260 007e 10BD     		pop	{r4, pc}
 261              	.L12:
 262              		.align	2
 263              	.L11:
 264 0080 00380240 		.word	1073887232
 265 0084 00700040 		.word	1073770496
 266              		.cfi_endproc
 267              	.LFE124:
 269              		.section	.text.main,"ax",%progbits
 270              		.align	2
 271              		.global	main
ARM GAS  /tmp/ccx1cz4G.s 			page 11


 272              		.thumb
 273              		.thumb_func
 275              	main:
 276              	.LFB123:
 103:Src/main.c    ****   /* USER CODE BEGIN 1 */
 277              		.loc 1 103 0
 278              		.cfi_startproc
 279              		@ Volatile: function does not return.
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 08B5     		push	{r3, lr}
 283              	.LCFI7:
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 3, -8
 286              		.cfi_offset 14, -4
 111:Src/main.c    **** 
 287              		.loc 1 111 0
 288 0002 FFF7FEFF 		bl	HAL_Init
 289              	.LVL4:
 118:Src/main.c    **** 
 290              		.loc 1 118 0
 291 0006 FFF7FEFF 		bl	SystemClock_Config
 292              	.LVL5:
 125:Src/main.c    ****   MX_CAN1_Init();
 293              		.loc 1 125 0
 294 000a FFF7FEFF 		bl	MX_GPIO_Init
 295              	.LVL6:
 126:Src/main.c    ****   /* USER CODE BEGIN 2 */
 296              		.loc 1 126 0
 297 000e FFF7FEFF 		bl	MX_CAN1_Init
 298              	.LVL7:
 128:Src/main.c    ****   pHeader.IDE=CAN_ID_STD; //set identifier to standard
 299              		.loc 1 128 0
 300 0012 2A4A     		ldr	r2, .L18
 301 0014 0120     		movs	r0, #1
 302 0016 1061     		str	r0, [r2, #16]
 129:Src/main.c    ****   pHeader.RTR=CAN_RTR_DATA; //set data type to remote transmission request?
 303              		.loc 1 129 0
 304 0018 0023     		movs	r3, #0
 305 001a 9360     		str	r3, [r2, #8]
 130:Src/main.c    ****   pHeader.StdId=0x244; //define a standard identifier, used for message identification by filters (
 306              		.loc 1 130 0
 307 001c D360     		str	r3, [r2, #12]
 131:Src/main.c    ****   
 308              		.loc 1 131 0
 309 001e 4FF41171 		mov	r1, #580
 310 0022 1160     		str	r1, [r2]
 134:Src/main.c    ****   sFilterConfig.FilterIdHigh=0x245<<5; //the ID that the filter looks for (switch this for the othe
 311              		.loc 1 134 0
 312 0024 2649     		ldr	r1, .L18+4
 313 0026 0B61     		str	r3, [r1, #16]
 135:Src/main.c    ****   sFilterConfig.FilterIdLow=0;
 314              		.loc 1 135 0
 315 0028 44F6A002 		movw	r2, #18592
 316 002c 0A60     		str	r2, [r1]
 136:Src/main.c    ****   sFilterConfig.FilterMaskIdHigh=0;
 317              		.loc 1 136 0
ARM GAS  /tmp/ccx1cz4G.s 			page 12


 318 002e 4B60     		str	r3, [r1, #4]
 137:Src/main.c    ****   sFilterConfig.FilterMaskIdLow=0;
 319              		.loc 1 137 0
 320 0030 8B60     		str	r3, [r1, #8]
 138:Src/main.c    ****   sFilterConfig.FilterScale=CAN_FILTERSCALE_32BIT; //set filter scale
 321              		.loc 1 138 0
 322 0032 CB60     		str	r3, [r1, #12]
 139:Src/main.c    ****   sFilterConfig.FilterActivation=ENABLE;
 323              		.loc 1 139 0
 324 0034 C861     		str	r0, [r1, #28]
 140:Src/main.c    ****   
 325              		.loc 1 140 0
 326 0036 0862     		str	r0, [r1, #32]
 142:Src/main.c    **** 
 327              		.loc 1 142 0
 328 0038 224C     		ldr	r4, .L18+8
 329 003a 2046     		mov	r0, r4
 330 003c FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 331              	.LVL8:
 145:Src/main.c    ****   //not sure i need this
 332              		.loc 1 145 0
 333 0040 2046     		mov	r0, r4
 334 0042 FFF7FEFF 		bl	HAL_CAN_Start
 335              	.LVL9:
 147:Src/main.c    **** 
 336              		.loc 1 147 0
 337 0046 2046     		mov	r0, r4
 338 0048 0221     		movs	r1, #2
 339 004a FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 340              	.LVL10:
 341              	.L15:
 155:Src/main.c    ****     rts_holder = HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_0);
 342              		.loc 1 155 0
 343 004e 1E4C     		ldr	r4, .L18+12
 344 0050 2046     		mov	r0, r4
 345 0052 0121     		movs	r1, #1
 346 0054 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 347              	.LVL11:
 348 0058 1C4D     		ldr	r5, .L18+16
 349 005a 2860     		str	r0, [r5]
 156:Src/main.c    ****     horn_holder = HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_0);
 350              		.loc 1 156 0
 351 005c 2046     		mov	r0, r4
 352 005e 0121     		movs	r1, #1
 353 0060 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 354              	.LVL12:
 355 0064 1A4B     		ldr	r3, .L18+20
 356 0066 1860     		str	r0, [r3]
 157:Src/main.c    **** 
 357              		.loc 1 157 0
 358 0068 2046     		mov	r0, r4
 359 006a 0121     		movs	r1, #1
 360 006c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 361              	.LVL13:
 362 0070 184B     		ldr	r3, .L18+24
 363 0072 1860     		str	r0, [r3]
 159:Src/main.c    ****     /* USER CODE END WHILE */
ARM GAS  /tmp/ccx1cz4G.s 			page 13


 364              		.loc 1 159 0
 365 0074 0220     		movs	r0, #2
 366 0076 FFF7FEFF 		bl	HAL_Delay
 367              	.LVL14:
 161:Src/main.c    ****       //send can message
 368              		.loc 1 161 0
 369 007a 2046     		mov	r0, r4
 370 007c 0121     		movs	r1, #1
 371 007e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 372              	.LVL15:
 373 0082 2B68     		ldr	r3, [r5]
 374 0084 9842     		cmp	r0, r3
 375 0086 07D0     		beq	.L14
 163:Src/main.c    ****       //MIGHT NEED TO RE-ADD POINTERS
 376              		.loc 1 163 0
 377 0088 134A     		ldr	r2, .L18+28
 378 008a 0023     		movs	r3, #0
 379 008c 1370     		strb	r3, [r2]
 165:Src/main.c    **** 
 380              		.loc 1 165 0
 381 008e 0D48     		ldr	r0, .L18+8
 382 0090 0A49     		ldr	r1, .L18
 383 0092 124B     		ldr	r3, .L18+32
 384 0094 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 385              	.LVL16:
 386              	.L14:
 168:Src/main.c    ****       //send can message
 387              		.loc 1 168 0
 388 0098 0B48     		ldr	r0, .L18+12
 389 009a 0221     		movs	r1, #2
 390 009c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 391              	.LVL17:
 392 00a0 0B4B     		ldr	r3, .L18+20
 393 00a2 1B68     		ldr	r3, [r3]
 394 00a4 9842     		cmp	r0, r3
 395 00a6 D2D0     		beq	.L15
 170:Src/main.c    ****       HAL_CAN_AddTxMessage(&hcan1, &pHeader, &a, &TxMailbox);  //function to add message for transm
 396              		.loc 1 170 0
 397 00a8 0B4A     		ldr	r2, .L18+28
 398 00aa 0223     		movs	r3, #2
 399 00ac 1370     		strb	r3, [r2]
 171:Src/main.c    **** 
 400              		.loc 1 171 0
 401 00ae 0548     		ldr	r0, .L18+8
 402 00b0 0249     		ldr	r1, .L18
 403 00b2 0A4B     		ldr	r3, .L18+32
 404 00b4 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 405              	.LVL18:
 406 00b8 C9E7     		b	.L15
 407              	.L19:
 408 00ba 00BF     		.align	2
 409              	.L18:
 410 00bc 00000000 		.word	pHeader
 411 00c0 00000000 		.word	sFilterConfig
 412 00c4 00000000 		.word	hcan1
 413 00c8 00100240 		.word	1073876992
 414 00cc 00000000 		.word	lts_holder
ARM GAS  /tmp/ccx1cz4G.s 			page 14


 415 00d0 00000000 		.word	rts_holder
 416 00d4 00000000 		.word	horn_holder
 417 00d8 00000000 		.word	a
 418 00dc 00000000 		.word	TxMailbox
 419              		.cfi_endproc
 420              	.LFE123:
 422              		.section	.text.Error_Handler,"ax",%progbits
 423              		.align	2
 424              		.global	Error_Handler
 425              		.thumb
 426              		.thumb_func
 428              	Error_Handler:
 429              	.LFB127:
 275:Src/main.c    **** 
 276:Src/main.c    **** /* USER CODE BEGIN 4 */
 277:Src/main.c    **** 
 278:Src/main.c    **** /* USER CODE END 4 */
 279:Src/main.c    **** 
 280:Src/main.c    **** /**
 281:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 282:Src/main.c    ****   * @retval None
 283:Src/main.c    ****   */
 284:Src/main.c    **** void Error_Handler(void)
 285:Src/main.c    **** {
 430              		.loc 1 285 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435 0000 7047     		bx	lr
 436              		.cfi_endproc
 437              	.LFE127:
 439              		.comm	horn_holder,4,4
 440              		.comm	rts_holder,4,4
 441              		.comm	lts_holder,4,4
 442              		.comm	horn,1,1
 443              		.comm	lts,1,1
 444              		.comm	rts,1,1
 445              		.comm	sFilterConfig,40,4
 446              		.comm	a,1,1
 447              		.comm	TxMailbox,4,4
 448              		.comm	pRxHeader,28,4
 449              		.comm	pHeader,24,4
 450              		.comm	hcan1,40,4
 451 0002 00BF     		.text
 452              	.Letext0:
 453              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 454              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 455              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 456              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 457              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 458              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 459              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 460              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 461              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 462              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 463              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccx1cz4G.s 			page 15


ARM GAS  /tmp/ccx1cz4G.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccx1cz4G.s:21     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccx1cz4G.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccx1cz4G.s:97     .text.MX_GPIO_Init:0000000000000064 $d
     /tmp/ccx1cz4G.s:103    .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccx1cz4G.s:107    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccx1cz4G.s:155    .text.MX_CAN1_Init:0000000000000030 $d
                            *COM*:0000000000000028 hcan1
     /tmp/ccx1cz4G.s:161    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccx1cz4G.s:166    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccx1cz4G.s:264    .text.SystemClock_Config:0000000000000080 $d
     /tmp/ccx1cz4G.s:270    .text.main:0000000000000000 $t
     /tmp/ccx1cz4G.s:275    .text.main:0000000000000000 main
     /tmp/ccx1cz4G.s:410    .text.main:00000000000000bc $d
                            *COM*:0000000000000018 pHeader
                            *COM*:0000000000000028 sFilterConfig
                            *COM*:0000000000000004 lts_holder
                            *COM*:0000000000000004 rts_holder
                            *COM*:0000000000000004 horn_holder
                            *COM*:0000000000000001 a
                            *COM*:0000000000000004 TxMailbox
     /tmp/ccx1cz4G.s:423    .text.Error_Handler:0000000000000000 $t
     /tmp/ccx1cz4G.s:428    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000001 horn
                            *COM*:0000000000000001 lts
                            *COM*:0000000000000001 rts
                            *COM*:000000000000001c pRxHeader
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_CAN_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_GPIO_ReadPin
HAL_Delay
HAL_CAN_AddTxMessage
